{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/todo-element.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>MEAN Stack Todo Application</span>\\n</mat-toolbar>\\n<div>\\n  <router-outlet></router-outlet>\\n</div> \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { TodoElementService } from './todo-element.service';\n\nconst routes: Routes = [\n  {path: 'create', component: CreateComponent},\n  {path: 'edit/:id', component: EditComponent},\n  {path: 'list', component: ListComponent},\n  {path: '', redirectTo: 'list', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CreateComponent,\n    EditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    MatToolbarModule, \n    MatFormFieldModule, \n    MatInputModule, \n    MatOptionModule, \n    MatSelectModule, \n    MatIconModule, \n    MatButtonModule, \n    MatCardModule, \n    MatTableModule, \n    MatDividerModule, \n    MatSnackBarModule\n  ],\n  providers: [TodoElementService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","module.exports = \".create-form{\\r\\n    min-width: 150px;\\r\\n    width: 100%;\\r\\n}\\r\\n.field-full-width{\\r\\n    width:100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsV0FBVztBQUNmO0FBQ0E7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jcmVhdGUtZm9ybXtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4uZmllbGQtZnVsbC13aWR0aHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <section class=\\\"mat-typography\\\">\\n      <h3>Create a New Todo</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"createForm\\\" class=\\\"create-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" #name>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field> \\n      <mat-divider></mat-divider>\\n      <br><br>\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/list\\\" style = \\\"margin-right:10px;\\\">Back</button>\\n      <button type=\\\"submit\\\" (click)=\\\"addTodoElement(name.value,description.value)\\\" [disabled]=\\\"createForm.pristine || createForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n    </form>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TodoElementService } from '../../todo-element.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  createForm : FormGroup;\n\n  constructor(private todoElementService : TodoElementService, private fb: FormBuilder, private router: Router, private snackBar: MatSnackBar) { \n    this.createForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ''\n    });\n  }\n\n  addTodoElement(name, description){\n    this.todoElementService.addTodoElement(name, description).subscribe(() => {\n      console.log('New Todo Added');\n      this.router.navigate(['/list']);\n      this.snackBar.open('Todo Added Successfully','OK',{\n        duration: 3000\n      });\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".edit-form{\\r\\n    min-width: 150px;\\r\\n    width: 100%;\\r\\n}\\r\\n.field-full-width{\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0FBQ2Y7QUFDQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdC1mb3Jte1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5maWVsZC1mdWxsLXdpZHRoe1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <section class=\\\"mat-typography\\\">\\n      <h3>Update Todo</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" #name>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field> \\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\" #status>\\n          <mat-option value=\\\"Open\\\">Open</mat-option>\\n          <mat-option value=\\\"In Progress\\\">In Progress</mat-option>\\n          <mat-option value=\\\"Completed\\\">Completed</mat-option>\\n        </mat-select>\\n      </mat-form-field> \\n      <mat-divider></mat-divider>\\n      <br><br>\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/list\\\">Back</button>&nbsp;\\n      <button type=\\\"submit\\\" (click)=\\\"updateTodoElement(name.value,description.value,status.value)\\\" [disabled]=\\\"updateForm.pristine || updateForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n    </form>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TodoElementService } from '../../todo-element.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms'; \nimport { MatSnackBar } from '@angular/material';\nimport { TodoElement } from '../../todo-element.model';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  id: String;\n  todoElement: any = {};\n  updateForm: FormGroup;\n\n  constructor(private todoElementService : TodoElementService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm(){\n    this.updateForm = this.fb.group({\n      name: ['', Validators.required],\n      description: '',\n      status: '' \n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n      this.todoElementService.getTodoElementById(this.id).subscribe(res => {\n        this.todoElement = res;\n        this.updateForm.get('name').setValue(this.todoElement.name);\n        this.updateForm.get('description').setValue(this.todoElement.description);\n        this.updateForm.get('status').setValue(this.todoElement.status);\n      });\n    });\n  }\n\n  updateTodoElement(name, description, status){\n    this.todoElementService.updateTodoElement(this.id, name, description, status).subscribe(() => {\n      console.log('Edited..');\n      this.snackBar.open('Todo has been updated', 'OK', {\n        duration: 3000\n      });\n      this.router.navigate(['/list']);\n    });\n  }\n\n}\n","module.exports = \"table{\\r\\n    width: 100%;\\r\\n}\\r\\n.mat-column-right{\\r\\n    text-align:center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLm1hdC1jb2x1bW4tcmlnaHR7XHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxufSJdfQ== */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New Todo</button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <table mat-table [dataSource]=\\\"todoElements\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef>Description</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.description }}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.status }}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"editTodoElement(element._id)\\\">Edit</button>\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"deleteTodoElement(element._id)\\\">Delete</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TodoElementService } from '../../todo-element.service';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\nimport { TodoElement } from '../../todo-element.model';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  todoElements: TodoElement[];\n  displayedColumns = ['name', 'description', 'status', 'actions'];\n\n  constructor(private todoElementService : TodoElementService, private router : Router, private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n      this.fetchTodoElements();\n  }\n\n  fetchTodoElements(){\n    this.todoElementService.getTodoElements().subscribe((data : TodoElement[]) => {\n      this.todoElements = data;\n      console.log('Data retrieved...');\n    });\n  }\n\n  editTodoElement(id){\n    this.router.navigate([`/edit/${id}`]);\n  }\n\n  deleteTodoElement(id){\n    this.todoElementService.deleteTodoElement(id).subscribe(() => {\n      console.log('Deleted');\n      this.fetchTodoElements();\n      this.snackBar.open('Todo Deleted Successfully','OK',{\n        duration: 3000\n      });\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoElementService {\n\n  url = 'http://localhost:4000';\n\n  constructor(private http: HttpClient) { }\n\n  getTodoElements(){\n    return this.http.get(`${this.url}/api/v1/todos`);\n  }\n  getTodoElementById(id){\n    return this.http.get(`${this.url}/api/v1/todo/${id}`);\n  }\n  addTodoElement(name, description){\n    const todo = {\n      name: name,\n      description: description,\n      status: \"Open\"\n    };\n    return this.http.post(`${this.url}/api/v1/todo/new`, todo);\n  }\n  updateTodoElement(id, name, description, status){\n    const todo = {\n      name: name,\n      description: description,\n      status: status\n    }\n    return this.http.put(`${this.url}/api/v1/todo/${id}`, todo);\n  }\n  deleteTodoElement(id){\n    return this.http.get(`${this.url}/api/v1/todo/delete/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}